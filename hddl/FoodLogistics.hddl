(define (domain hospital)
    (:types order food room - object)
    (:predicates
        (pickedmeal ?r - robot)
        (deliveredmeal ?r - robot)
        (at ?r - robot ?rm - room)
        (atkitchen ?r - robot)
        (battery ?r - robot)
        (delivered ?o - order)
        (pickedup ?o - order)
        (target_room ?o - order)
    )
    (:capabilities pickmeal delivermeal)

    (:task PickupFood :parameters (?r - robot ?rm - room ?o - order))
	(:method food-pickup
		:parameters (?r - robot ?rm - room ?o - order)
		:task (PickupFood ?r ?rm ?o)
        :precondition (and
            (atkitchen ?r)
        )
		:subtasks (and
			(wait-for-foods ?r ?rm ?o)
		)
	)
	(:action wait-for-foods
		:parameters (?r - robot ?rm - room ?o - order)
        :required-capabilities (pickmeal)
		:effect (and
			(pickedmeal ?r)
		)
	)

    (:task DeliverFood :parameters (?r - robot ?rm - room ?o - order))
	(:method foods-deliver
		:parameters (?r - robot ?rm - room ?o - order)
		:task (DeliverFood ?r ?rm ?o)
		:ordered-subtasks (and
            (navto ?r ?rm)
			(wait-for-delivery ?r ?rm ?o)
		)
	)
	(:action wait-for-delivery
		:parameters (?r - robot ?rm - room ?o - order)
        :required-capabilities (delivermeal)
		:effect (and
			(deliveredmeal ?r)
		)
	)

    (:task GoToKitchen :parameters (?r - robot ?rm - room))
	(:method goto-kitchen
		:parameters (?r - robot ?rm - room)
		:task (GoToKitchen ?r ?rm)
		:subtasks (and
            (navto ?r ?rm)
		)
	)

    (:task RechargeBattery :parameters (?r - robot))
	(:method battery-recharge
		:parameters (?r - robot)
		:task (RechargeBattery ?r)
		:precondition ()
		:subtasks (and
			(recharge-battery ?r)
		)
	)
	(:action recharge-battery
		:parameters (?r - robot)
	)

    (:action navto
		:parameters (?r - robot ?rm - room)
	)
)